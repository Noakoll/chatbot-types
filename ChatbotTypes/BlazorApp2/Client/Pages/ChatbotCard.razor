@using System.Threading.Tasks

<div class="chatbot-card @(IsExpanded ? "expanded" : "")" @onclick="Toggle" id="@Bot.Id">
    <div class="chatbot-header">
        <div class="chatbot-logo" style="@(Bot.IsGradient ? $"background: {Bot.Color}; color: white;" : $"color: {Bot.Color};")">
            @Bot.LogoText
        </div>
        <div class="chatbot-name">@Bot.Name</div>
        <div class="expand-icon">▼</div>
    </div>
    <div class="chatbot-content">
        <div class="chatbot-info">
            <div class="info-item">
                <div class="info-label">מי אני:</div>
                @Bot.Description
            </div>
            <div class="info-item">
                <div class="info-label">שימוש עיקרי:</div>
                @Bot.Usage
            </div>
            <div class="info-item">
                <div class="info-label">חוזקות:</div>
                @Bot.Strengths
            </div>
            <div class="info-item">
                <div class="info-label">מגבלות:</div>
                @Bot.Limitations
            </div>
        </div>
        <div class="chat-example">
            @foreach (var message in Bot.ChatExample)
            {
                <div class="chat-message @(message.IsBot ? "bot-message" : "user-message")">
                    @message.Text
                </div>
            }
        </div>
        @if (!string.IsNullOrEmpty(Bot.WebsiteUrl))
        {
            <a href="@Bot.WebsiteUrl" target="_blank" class="chatbot-link" @onclick:stopPropagation="true">
                בקר באתר @Bot.Name
            </a>
        }
    </div>
</div>

@code {
    [Parameter]
    public ChatbotTypes.ChatbotInfo Bot { get; set; }

    [Parameter]
    public EventCallback<string> OnToggle { get; set; }

    private bool IsExpanded { get; set; }

    private async Task Toggle()
    {
        IsExpanded = !IsExpanded;
        await OnToggle.InvokeAsync(Bot.Id);
    }
}